{
  "version": "2",
  "templates": [
    {
      "categories": [
        "performance",
        "networking"
      ],
      "env": [],
      "description": "Cross-platform tool for network performance measurement and tuning",
      "note": "Requires Traefik with iperftcp and iperfudp entrypoints set up. Based on mlabbe/iperf3 (MIT license).",
      "platform": "linux",
      "repository": {
        "stackfile": "docker-compose.yml",
        "url": "https://github.com/lzpreslav/iperf3-stack"
      },
      "title": "iperf3 server",
      "type": 3
    },
    {
      "categories": [
        "networking"
      ],
      "env": [
        {
          "label": "Zerotier network to connect to",
          "name": "ZEROTIER_NETWORK"
        }
      ],
      "description": "Zerotier client",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/f/f1/ZeroTier_Logo.png",
      "note": "Uses the host network and shares the tun iface",
      "platform": "linux",
      "repository": {
        "stackfile": "docker-compose.yml",
        "url": "https://github.com/lzpreslav/zerotier-stack"
      },
      "title": "Zerotier",
      "type": 3
    },
    {
      "categories": [
        "media"
      ],
      "env": [
        {
          "default": "1000",
          "label": "GID to run the container as",
          "name": "GID"
        },
        {
          "default": "1000",
          "label": "UID to run the container as",
          "name": "UID"
        },
        {
          "default": "localhost",
          "label": "Hostname of the YoutubeDL-Material frontend",
          "name": "YTDLM_HOSTNAME"
        },
        {
          "default": "",
          "label": "Traefik middlewares to enable for this service's router",
          "name": "TRAEFIK_MIDDLEWARES"
        },
        {
          "default": "appdata",
          "label": "Mounted volume for the service database and configuration",
          "name": "APPDATA_VOLUME"
        },
        {
          "default": "audio",
          "label": "Mounted volume for audio downloads",
          "name": "AUDIO_VOLUME"
        },
        {
          "default": "subscriptions",
          "label": "Mounted volume for playlist subscriptions",
          "name": "SUBSCRIPTIONS_VOLUME"
        },
        {
          "default": "video",
          "label": "Mounted volume for video downloads",
          "name": "VIDEO_VOLUME"
        }
      ],
      "description": "Frontend for youtube-dl, used for downloading audio/video from Youtube, Twitch and other media sites.",
      "note": "Use GID and UID to define whac user/group to run the container as - necessary when mounting binds for media storage.",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/0/09/YouTube_full-color_icon_%282017%29.svg",
      "platform": "linux",
      "repository": {
        "stackfile": "docker-compose.yml",
        "url": "https://github.com/lzpreslav/youtubedl-material-stack"
      },
      "title": "YoutubeDL-Material",
      "type": 3
    },
    {
      "categories": [
        "networking"
      ],
      "env": [
        {
          "default": "5",
          "label": "Docker image tag",
          "name": "WG_EASY_TAG"
        },
        {
          "label": "Hostname of the wg-easy frontend",
          "name": "WG_EASY_HOSTNAME"
        },
        {
          "label": "Hostname of the Wireguard VPN",
          "name": "WG_HOST"
        },
        {
          "label": "Default DNS server inside the VPN",
          "name": "WG_DEFAULT_DNS"
        },
        {
          "default": "",
          "label": "Middlewares to attach to the Traefik proxy",
          "name": "TRAEFIK_MIDDLEWARES"
        },
        {
          "default": "wireguard",
          "label": "Wireguard config volume",
          "name": "WG_EASY_VOLUME"
        }
      ],
      "description": "Frontend for Wireguard",
      "logo": "https://cdn.freelogovectors.net/wp-content/uploads/2021/10/wireguard-logo-freelogovectors.net_.png",
      "platform": "linux",
      "repository": {
        "stackfile": "stacks/wg-easy/docker-stack.yml",
        "url": "https://github.com/lzpreslav/portainer-stacks"
      },
      "title": "wg-easy",
      "type": 3
    },
    {
      "categories": [
        "media"
      ],
      "env": [
        {
          "default": "1000",
          "label": "UID to run the container as, note that it MUST have ownership of the Downloads volume",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "GID to run the container as",
          "name": "PGID"
        },
        {
          "default": "Etc/UTC",
          "label": "Timezone",
          "name": "TZ"
        },
        {
          "label": "Hostname of the qBittorrent frontend",
          "name": "QBITTORRENT_HOSTNAME"
        },
        {
          "default": "config",
          "label": "Config volume",
          "name": "CONFIG_VOLUME"
        },
        {
          "default": "downloads",
          "label": "Downloads volume",
          "name": "DOWNLOADS_VOLUME"
        }
      ],
      "description": "Cross-platform free and open-source BitTorrent client",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/6/66/New_qBittorrent_Logo.svg",
      "platform": "linux",
      "repository": {
        "stackfile": "docker-compose.yml",
        "url": "https://github.com/lzpreslav/qbittorrent-stack"
      },
      "title": "qBittorrent",
      "type": 3
    },
    {
      "categories": [
        "media"
      ],
      "env": [
        {
          "default": "1000",
          "label": "GID to run the container as",
          "name": "PGID"
        },
        {
          "default": "1000",
          "label": "UID to run the container as, MUST have read permissions on the folder and files",
          "name": "PUID"
        },
        {
          "default": "config",
          "label": "Config volume",
          "name": "CONFIG_VOLUME"
        },
        {
          "default": "media",
          "label": "Plex media volume, should be a bind or NFS mount",
          "name": "MEDIA_VOLUME"
        },
        {
          "default": "",
          "label": "Optionally you can obtain a claim token from https://plex.tv/claim and input here. Keep in mind that the claim tokens expire within 4 minutes.",
          "name": "PLEX_CLAIM"
        }
      ],
      "description": "Stores, organizes, and streams all content, while the clients are the playback applications running on myriad devices and web browsers",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/8/8e/Plex_favicon.png",
      "platform": "linux",
      "repository": {
        "stackfile": "docker-compose.yml",
        "url": "https://github.com/lzpreslav/plex-stack"
      },
      "title": "Plex Media Server",
      "type": 3
    }
  ]
}
